/**
 * Midgard Public API
 * The Midgard Public API queries THORChain and any chains linked via the Bifr√∂st and prepares information about the network to be readily available for public users. The API parses transaction event data from THORChain and stores them in a time-series database to make time-dependent queries easy. Midgard does not hold critical information. To interact with BEPSwap and Asgardex, users should query THORChain directly.
 *
 * OpenAPI spec version: 1.0.0-oas3
 * Contact: devs@thorchain.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Asset } from './asset';
import { Event } from './event';
import { Gas } from './gas';
import { Option } from './option';
import { Tx } from './tx';

export interface TxDetails { 
    pool?: Asset;
    type?: TxDetails.TypeEnum;
    status?: TxDetails.StatusEnum;
    in?: Tx;
    out?: Array<Tx>;
    date?: number;
    gas?: Gas;
    options?: Option;
    height?: string;
    events?: Event;
}
export namespace TxDetails {
    export type TypeEnum = 'swap' | 'stake' | 'unstake' | 'rewards' | 'add' | 'pool' | 'gas' | 'refund' | 'doubleSwap';
    export const TypeEnum = {
        Swap: 'swap' as TypeEnum,
        Stake: 'stake' as TypeEnum,
        Unstake: 'unstake' as TypeEnum,
        Rewards: 'rewards' as TypeEnum,
        Add: 'add' as TypeEnum,
        Pool: 'pool' as TypeEnum,
        Gas: 'gas' as TypeEnum,
        Refund: 'refund' as TypeEnum,
        DoubleSwap: 'doubleSwap' as TypeEnum
    };
    export type StatusEnum = 'success' | 'refund';
    export const StatusEnum = {
        Success: 'success' as StatusEnum,
        Refund: 'refund' as StatusEnum
    };
}
